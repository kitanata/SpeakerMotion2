- extends 'base.haml'

- block 'head'
  {{ form.media }}

- block 'content'
  #event-new
    .row
      .span6
        .row
          .span6
            %h2 Create a new Event

          .span6
            %label{for:"name"} Event Name:
            %input#name{name:"name", type:"text"}

          .span6
            %label{for:"description"} Description:
            %textarea#description{name:"description"}

          .span6
            %label{for:"id_location"} Location:
            %input#id_location{placeholder:"Enter the location name or city or state", type:"text", autocomplete:"off"}
            %span.search.addon
              %i.icon-search

            %button.btn.btn-warning#add-location{href:"#add-location-popup"}
              %i.icon-plus

          .span6
            %label{for:"start-date"} Start Date:
            %input#start-date{name:"start-date", type:"text"}

          .span6
            %label{for:"end-date"} End Date:
            %input#end-date{name:"end-date", type:"text"}

          .span6
            %button#create-event.btn.btn-warning{type:"submit"}
              Create Event

      .span6
        #map

%div{style:"display:none"}
  #add-location-popup{style:"background-color:white; padding: 40px;"}
    %h2 Add New Location
    %form{action:"/location/new/?next=/talk/{{talk.pk}}/event/new", method:"POST"}
      - csrf_token
      {{ location_form.as_p }}

      %button.btn.btn-warning{type:"submit"} Add Location

- block 'scripts'
  %script{type:"text/javascript"}
    $('#add-location').colorbox({inline: true, width:"300px"});

    L.Icon.Default.imagePath = '{{STATIC_URL}}img/';

    // create a map in the "map" div, set the view to a given place and zoom
    var map = L.map('map').setView([39.95, -82.95], 6);

    // add an OpenStreetMap tile layer
    L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
        attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
        }).addTo(map);

    var locationModels = {}
    var locations = []

    - for location in locations
      var name = "{{location.form_str}}"
      locations.push(name);
      locationModels[name] = {
          id: "{{location.pk}}",
          querystring: "{{location.geocode_querystring}}"
      };

      var url = "http://nominatim.openstreetmap.org/search/{{location.geocode_querystring}}?format=json";

      $.get(url, function(data) {
          if(data.length != 0) {
              L.marker([data[0].lat, data[0].lon]).addTo(map).bindPopup(
                  '<h4><a href="{{location.get_absolute_url}}">{{location.name}}</a></h4><br />{{location.address}}<br />{{location.city}}, {{location.state}} {{location.zip_code}}');
          }
      });

    var currentLocation = null;
    $('#id_location').typeahead({
        source: locations, 
        updater: function(selection){
            currentLocation = locationModels[selection];

            var url = "http://nominatim.openstreetmap.org/search/" + currentLocation.querystring + "?format=json";

            $.get(url, function(data) {
                if(data.length != 0) {
                    map.setView([data[0].lat, data[0].lon], 12);
                }
            });

            return selection;
        }
    });

    $('#start-date').datetimepicker({
        format: 'yyyy-mm-dd hh:ii'
    });

    $('#end-date').datetimepicker({
        format: 'yyyy-mm-dd hh:ii'
    });

    $('#create-event').on('click', function(){
        $.post("/event/new/", {
            'name': $('#name').val(),
            'description': $('#description').val(),
            'location': currentLocation.id,
            'start-date': $("#start-date").val(),
            'end-date': $("#end-date").val()
        }, function(){
            window.location = "{{user.get_profile.get_absolute_url}}";
        });
    });
